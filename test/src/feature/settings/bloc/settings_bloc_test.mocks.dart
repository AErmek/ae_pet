// Mocks generated by Mockito 5.3.2 from annotations
// in ae_pet/test/src/feature/settings/bloc/settings_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:ae_pet/src/feature/settings/enum/app_theme.dart' as _i5;
import 'package:ae_pet/src/feature/settings/model/settings_data.dart' as _i2;
import 'package:ae_pet/src/feature/settings/repository/settings_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSettingsData_0 extends _i1.SmartFake implements _i2.SettingsData {
  _FakeSettingsData_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SettingsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsRepository extends _i1.Mock
    implements _i3.SettingsRepository {
  MockSettingsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SettingsData currentData() => (super.noSuchMethod(
        Invocation.method(
          #currentData,
          [],
        ),
        returnValue: _FakeSettingsData_0(
          this,
          Invocation.method(
            #currentData,
            [],
          ),
        ),
      ) as _i2.SettingsData);
  @override
  _i4.Future<void> setTheme(_i5.AppTheme? value) => (super.noSuchMethod(
        Invocation.method(
          #setTheme,
          [value],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
